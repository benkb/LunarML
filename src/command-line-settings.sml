(* -*- mode: sml; mode: read-only -*- *)
(* This file was generated by util/record.lua. Do not edit by hand! *)
structure CommandLineSettings = struct
  structure set = struct
     val subcommand = fn subcommand => fn { subcommand = _, output, outputMode, dump, optimizationLevel, backend, libDir, printTimings, mlbPathSettings } => { subcommand = subcommand, output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
     val output = fn output => fn { subcommand, output = _, outputMode, dump, optimizationLevel, backend, libDir, printTimings, mlbPathSettings } => { subcommand = subcommand, output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
     val outputMode = fn outputMode => fn { subcommand, output, outputMode = _, dump, optimizationLevel, backend, libDir, printTimings, mlbPathSettings } => { subcommand = subcommand, output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
     val dump = fn dump => fn { subcommand, output, outputMode, dump = _, optimizationLevel, backend, libDir, printTimings, mlbPathSettings } => { subcommand = subcommand, output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
     val optimizationLevel = fn optimizationLevel => fn { subcommand, output, outputMode, dump, optimizationLevel = _, backend, libDir, printTimings, mlbPathSettings } => { subcommand = subcommand, output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
     val backend = fn backend => fn { subcommand, output, outputMode, dump, optimizationLevel, backend = _, libDir, printTimings, mlbPathSettings } => { subcommand = subcommand, output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
     val libDir = fn libDir => fn { subcommand, output, outputMode, dump, optimizationLevel, backend, libDir = _, printTimings, mlbPathSettings } => { subcommand = subcommand, output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
     val printTimings = fn printTimings => fn { subcommand, output, outputMode, dump, optimizationLevel, backend, libDir, printTimings = _, mlbPathSettings } => { subcommand = subcommand, output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
     val mlbPathSettings = fn mlbPathSettings => fn { subcommand, output, outputMode, dump, optimizationLevel, backend, libDir, printTimings, mlbPathSettings = _ } => { subcommand = subcommand, output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
  end
  structure update = struct
     val subcommand = fn f => fn { subcommand, output, outputMode, dump, optimizationLevel, backend, libDir, printTimings, mlbPathSettings } => { subcommand = f subcommand, output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
     val output = fn f => fn { subcommand, output, outputMode, dump, optimizationLevel, backend, libDir, printTimings, mlbPathSettings } => { subcommand = subcommand, output = f output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
     val outputMode = fn f => fn { subcommand, output, outputMode, dump, optimizationLevel, backend, libDir, printTimings, mlbPathSettings } => { subcommand = subcommand, output = output, outputMode = f outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
     val dump = fn f => fn { subcommand, output, outputMode, dump, optimizationLevel, backend, libDir, printTimings, mlbPathSettings } => { subcommand = subcommand, output = output, outputMode = outputMode, dump = f dump, optimizationLevel = optimizationLevel, backend = backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
     val optimizationLevel = fn f => fn { subcommand, output, outputMode, dump, optimizationLevel, backend, libDir, printTimings, mlbPathSettings } => { subcommand = subcommand, output = output, outputMode = outputMode, dump = dump, optimizationLevel = f optimizationLevel, backend = backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
     val backend = fn f => fn { subcommand, output, outputMode, dump, optimizationLevel, backend, libDir, printTimings, mlbPathSettings } => { subcommand = subcommand, output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = f backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
     val libDir = fn f => fn { subcommand, output, outputMode, dump, optimizationLevel, backend, libDir, printTimings, mlbPathSettings } => { subcommand = subcommand, output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend, libDir = f libDir, printTimings = printTimings, mlbPathSettings = mlbPathSettings }
     val printTimings = fn f => fn { subcommand, output, outputMode, dump, optimizationLevel, backend, libDir, printTimings, mlbPathSettings } => { subcommand = subcommand, output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend, libDir = libDir, printTimings = f printTimings, mlbPathSettings = mlbPathSettings }
     val mlbPathSettings = fn f => fn { subcommand, output, outputMode, dump, optimizationLevel, backend, libDir, printTimings, mlbPathSettings } => { subcommand = subcommand, output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend, libDir = libDir, printTimings = printTimings, mlbPathSettings = f mlbPathSettings }
  end
end;
