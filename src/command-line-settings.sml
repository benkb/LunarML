(* -*- mode: sml; mode: read-only -*- *)
(* This file was generated by util/record.lua. Do not edit by hand! *)
structure CommandLineSettings = struct
  structure set = struct
     val output = fn output => fn { output = _, outputMode, dump, optimizationLevel, backend } => { output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend }
     val outputMode = fn outputMode => fn { output, outputMode = _, dump, optimizationLevel, backend } => { output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend }
     val dump = fn dump => fn { output, outputMode, dump = _, optimizationLevel, backend } => { output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend }
     val optimizationLevel = fn optimizationLevel => fn { output, outputMode, dump, optimizationLevel = _, backend } => { output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend }
     val backend = fn backend => fn { output, outputMode, dump, optimizationLevel, backend = _ } => { output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend }
  end
  structure update = struct
     val output = fn f => fn { output, outputMode, dump, optimizationLevel, backend } => { output = f output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend }
     val outputMode = fn f => fn { output, outputMode, dump, optimizationLevel, backend } => { output = output, outputMode = f outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = backend }
     val dump = fn f => fn { output, outputMode, dump, optimizationLevel, backend } => { output = output, outputMode = outputMode, dump = f dump, optimizationLevel = optimizationLevel, backend = backend }
     val optimizationLevel = fn f => fn { output, outputMode, dump, optimizationLevel, backend } => { output = output, outputMode = outputMode, dump = dump, optimizationLevel = f optimizationLevel, backend = backend }
     val backend = fn f => fn { output, outputMode, dump, optimizationLevel, backend } => { output = output, outputMode = outputMode, dump = dump, optimizationLevel = optimizationLevel, backend = f backend }
  end
end;
