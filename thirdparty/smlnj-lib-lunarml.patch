diff --recursive -u -N -x *~ smlnj-lib-original/Util/base64.sml smlnj-lib-lunarml/Util/base64.sml
--- smlnj-lib-original/Util/base64.sml	2012-09-25 00:54:30
+++ smlnj-lib-lunarml/Util/base64.sml	2022-06-19 19:17:44
@@ -15,6 +15,7 @@
     structure W8V = Word8Vector
     structure W8A = Word8Array
     structure UCV = Unsafe.CharVector
+    structure UCA = Unsafe.CharArray
     structure UW8V = Unsafe.Word8Vector
 
   (* encoding table *)
@@ -59,16 +60,16 @@
     local
       fun encode64 (vec, start, len) = let
 	    val outLen = 4 * Int.quot(len + 2, 3)
-	    val outBuf = Unsafe.CharVector.create outLen
+	    val outBuf = Unsafe.CharArray.create outLen
 	    val nTriples = Int.quot(len, 3)
 	    val extra = Int.rem(len, 3)
 	    fun insBuf (i, (c1, c2, c3, c4)) = let
 		  val idx = 4*i
 		  in
-		    UCV.update(outBuf, idx,   c1);
-		    UCV.update(outBuf, idx+1, c2);
-		    UCV.update(outBuf, idx+2, c3);
-		    UCV.update(outBuf, idx+3, c4)
+		    UCA.update(outBuf, idx,   c1);
+		    UCA.update(outBuf, idx+1, c2);
+		    UCA.update(outBuf, idx+2, c3);
+		    UCA.update(outBuf, idx+3, c4)
 		  end
 	    fun loop (i, idx) = if (i < nTriples)
 		  then (
@@ -81,7 +82,7 @@
 		    (* end case *))
 	    in
 	      loop (0, start);
-	      outBuf
+	      CharArray.vector outBuf
 	    end
     in
 
diff --recursive -u -N -x *~ smlnj-lib-original/Util/graph-scc-fn.sml smlnj-lib-lunarml/Util/graph-scc-fn.sml
--- smlnj-lib-original/Util/graph-scc-fn.sml	2020-04-20 05:46:13
+++ smlnj-lib-lunarml/Util/graph-scc-fn.sml	2022-06-18 17:18:17
@@ -9,7 +9,7 @@
  * author: Matthias Blume
  *)
 
-functor GraphSCCFn (Nd: ORD_KEY) :> GRAPH_SCC where Nd = Nd =
+functor GraphSCCFn (Nd: ORD_KEY) :> GRAPH_SCC where type Nd.ord_key = Nd.ord_key =
   struct
     structure Nd = Nd
 
diff --recursive -u -N -x *~ smlnj-lib-original/Util/hash-table-rep.sml smlnj-lib-lunarml/Util/hash-table-rep.sml
--- smlnj-lib-original/Util/hash-table-rep.sml	2018-09-26 21:01:19
+++ smlnj-lib-lunarml/Util/hash-table-rep.sml	2023-06-02 21:28:31
@@ -75,7 +75,7 @@
 		  val i' = i+i
 		  in
 		    if i' < Array.maxLen then f i' else i
-		  end
+		  end handle Overflow => i
 	  in
 	    f 0x10000
 	  end
diff --recursive -u -N -x *~ smlnj-lib-original/Util/smlnj-lib.mlb smlnj-lib-lunarml/Util/smlnj-lib.mlb
--- smlnj-lib-original/Util/smlnj-lib.mlb	1970-01-01 09:00:00
+++ smlnj-lib-lunarml/Util/smlnj-lib.mlb	2023-09-16 16:37:36
@@ -0,0 +1,235 @@
+local
+$(SML_LIB)/basis/basis.mlb
+$(SML_LIB)/basis/unsafe.mlb
+ansi-term.sml
+mono-array-sort-sig.sml
+array-qsort-fn.sml
+array-sort-sig.sml
+array-qsort.sml
+atom-sig.sml
+fnv-hash.sml
+atom.sml
+lib-base-sig.sml
+lib-base.sml
+ord-key-sig.sml
+ord-map-sig.sml
+binary-map-fn.sml
+atom-binary-map.sml
+ord-set-sig.sml
+binary-set-fn.sml
+atom-binary-set.sml
+ann "nonexhaustiveBind ignore" in
+redblack-map-fn.sml
+end
+atom-redblack-map.sml
+ann "nonexhaustiveBind ignore" in
+redblack-set-fn.sml
+end
+atom-redblack-set.sml
+atom-map.sml
+atom-set.sml
+hash-key-sig.sml
+hash-table-rep.sml
+mono-hash-table-sig.sml
+hash-table-fn.sml
+atom-table.sml
+base64-sig.sml
+base64.sml
+bit-array-sig.sml
+bit-array.sml
+bsearch-fn.sml
+char-map-sig.sml
+char-map.sml
+dynamic-array-sig.sml
+dynamic-array.sml
+mono-dynamic-array-sig.sml
+dynamic-array-fn.sml
+fifo-sig.sml
+fifo.sml
+fmt-fields.sml
+format-sig.sml
+real-format.sml
+format.sml
+format-comb-sig.sml
+format-comb.sml
+graph-scc-sig.sml
+graph-scc-fn.sml
+hash-string.sml
+mono-hash-set-sig.sml
+hash-set-fn.sml
+hash-table-sig.sml
+hash-table.sml
+mono-hash2-table-sig.sml
+hash2-table-fn.sml
+keyword-fn.sml
+int-binary-map.sml
+int-binary-set.sml
+int-hash-table.sml
+int-list-map.sml
+int-list-set.sml
+ann "nonexhaustiveBind ignore" in
+int-redblack-map.sml
+int-redblack-set.sml
+end
+interval-domain-sig.sml
+interval-set-sig.sml
+interval-set-fn.sml
+(* io-util-sig.sml
+io-util.sml *)
+getopt-sig.sml
+getopt.sml
+mono-priorityq-sig.sml
+priority-sig.sml
+left-priorityq-fn.sml
+list-format-sig.sml
+list-format.sml
+list-map-fn.sml
+listsort-sig.sml
+list-mergesort.sml
+list-set-fn.sml
+list-xprod-sig.sml
+list-xprod.sml
+mono-array-fn.sml
+parser-comb-sig.sml
+parser-comb.sml
+(* path-util-sig.sml
+path-util.sml *)
+plist-sig.sml
+plist.sml
+(* target64-prime-sizes.sml *)
+queue-sig.sml
+queue.sml
+rand-sig.sml
+rand.sml
+random-sig.sml
+random.sml
+scan-sig.sml
+scan.sml
+uref-sig.sml
+simple-uref.sml
+splaytree-sig.sml
+splaytree.sml
+splay-map-fn.sml
+splay-set-fn.sml
+(* time-limit.sml *)
+uref.sml
+word-hash-table.sml
+ann "nonexhaustiveBind ignore" in
+word-redblack-map.sml
+word-redblack-set.sml
+end
+real-order-stats.sml
+univariate-stats.sml
+utf8-sig.sml
+utf8.sml
+in
+signature ARRAY_SORT
+signature ATOM
+signature BASE64
+signature BIT_ARRAY
+signature CHAR_MAP
+signature DYNAMIC_ARRAY
+signature FIFO
+signature FORMAT
+signature FORMAT_COMB
+signature GRAPH_SCC
+signature HASH_KEY
+signature HASH_TABLE
+signature INTERVAL_DOMAIN
+signature INTERVAL_SET
+(* signature IO_UTIL *)
+signature GET_OPT
+signature LIB_BASE
+signature LIST_FORMAT
+signature LIST_SORT
+signature LIST_XPROD
+signature MONO_ARRAY_SORT
+signature MONO_DYNAMIC_ARRAY
+signature MONO_HASH_SET
+signature MONO_HASH_TABLE
+signature MONO_HASH2_TABLE
+signature MONO_PRIORITYQ
+signature ORD_KEY
+signature ORD_MAP
+signature ORD_SET
+signature PARSER_COMB
+(* signature PATH_UTIL *)
+signature PRIORITY
+signature PROP_LIST
+signature QUEUE
+signature RAND
+signature RANDOM
+signature SCAN
+signature SPLAY_TREE
+signature UREF
+signature UTF8
+structure ANSITerm
+structure ArrayQSort
+structure Atom
+structure AtomBinaryMap
+structure AtomBinarySet
+structure AtomRedBlackMap
+structure AtomRedBlackSet
+structure AtomMap
+structure AtomSet
+structure AtomTable
+structure Base64
+structure BitArray
+structure CharMap
+structure DynamicArray
+structure Fifo
+structure FNVHash
+structure Format
+structure FormatComb
+structure HashString
+structure HashTable
+structure IntBinaryMap
+structure IntBinarySet
+structure IntHashTable
+structure IntListMap
+structure IntListSet
+structure IntRedBlackMap
+structure IntRedBlackSet
+(* structure IOUtil *)
+structure GetOpt
+structure LibBase
+structure ListFormat
+structure ListMergeSort
+structure ListXProd
+structure ParserComb
+(* structure PathUtil *)
+(* structure PrimeSizes *)
+structure PropList
+structure Queue
+structure Rand
+structure Random
+structure Scan
+structure SimpleURef
+(* structure TimeLimit *)
+structure URef
+structure WordHashTable
+structure WordRedBlackMap
+structure WordRedBlackSet
+structure RealOrderStats
+structure UnivariateStats
+structure UTF8
+functor ArrayQSortFn
+functor BSearchFn
+functor BinaryMapFn
+functor BinarySetFn
+functor DynamicArrayFn
+functor GraphSCCFn
+functor HashSetFn
+functor HashTableFn
+functor Hash2TableFn
+functor IntervalSetFn
+functor KeywordFn
+functor LeftPriorityQFn
+functor ListMapFn
+functor ListSetFn
+functor MonoArrayFn
+functor RedBlackMapFn
+functor RedBlackSetFn
+functor SplayMapFn
+functor SplaySetFn
+end
